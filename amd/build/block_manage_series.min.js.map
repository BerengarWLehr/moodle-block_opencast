{"version":3,"sources":["../src/block_manage_series.js"],"names":["getBody","contextid","ocinstanceid","formdata","params","jsonformdata","Fragment","loadFragment","submitFormAjax","e","preventDefault","modal","data","seriestable","changeEvent","document","createEvent","initEvent","getRoot","find","each","index","element","dispatchEvent","invalid","$","merge","length","first","focus","formData","serialize","Ajax","call","methodname","args","done","newseries","destroy","s","JSON","parse","addRow","seriestitle","series","isdefault","fail","setBody","loadSeriesTitles","row","stringify","titles","getRows","forEach","update","getData","error","message","init","seriesinputname","str","get_strings","key","component","then","jsstrings","seriesinput","Tabulator","val","layout","placeholder","headerSort","dataChanged","filter","value","reduce","arr","x","dataLoaded","map","columns","title","field","editable","hozAlign","widthGrow","formatter","cell","input","createElement","type","checked","getValue","addEventListener","getRow","prop","width","cellClick","_","getCell","ModalFactory","create","types","SAVE_CANCEL","body","setSaveButtonText","setLarge","on","ModalEvents","hidden","bind","shown","append","save","submit","show","delete","click","seriesid","id","context","announce","closebutton","extraclasses","Templates","render","html","Notification","alert"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript to initialise the opencast block settings.\n *\n * @package    block_opencast\n * @copyright  2021 Tamara Gunkel, University of Münster\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Tabulator from 'block_opencast/tabulator';\nimport $ from 'jquery';\nimport * as str from 'core/str';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Fragment from 'core/fragment';\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\n\nfunction getBody(contextid, ocinstanceid, formdata) {\n    if (typeof formdata === 'undefined') {\n        formdata = \"\";\n    }\n\n    var params = {ocinstanceid: ocinstanceid, jsonformdata: formdata};\n    return Fragment.loadFragment('block_opencast', 'series_form', contextid, params);\n}\n\nfunction submitFormAjax(e) {\n    e.preventDefault();\n    var modal = e.data.modal;\n    var contextid = e.data.contextid;\n    var seriestable = e.data.seriestable;\n\n    var changeEvent = document.createEvent('HTMLEvents');\n    changeEvent.initEvent('change', true, true);\n\n    // Run validation functions.\n    modal.getRoot().find(':input').each(function (index, element) {\n        element.dispatchEvent(changeEvent);\n    });\n\n    // Check if there are invalid fields.\n    var invalid = $.merge(\n        modal.getRoot().find('[aria-invalid=\"true\"]'),\n        modal.getRoot().find('.error')\n    );\n\n    if (invalid.length) {\n        invalid.first().focus();\n        return;\n    }\n\n    // Convert all the form elements values to a serialised string.\n    var formData = modal.getRoot().find('form').serialize();\n\n    // Submit form.\n    Ajax.call([{\n        methodname: 'block_opencast_submit_series_form',\n        args: {contextid: contextid, ocinstanceid: e.data.ocinstanceid, jsonformdata: formData},\n        done: function (newseries) {\n            modal.destroy();\n            if(seriestable !== undefined) {\n                var s = JSON.parse(newseries);\n                seriestable.addRow({'seriesname': s.seriestitle, 'series':s.series, 'isdefault': s.isdefault});\n            }\n        },\n        fail: function () {\n            modal.setBody(getBody(contextid, e.data.ocinstanceid, formData));\n        }\n    }]);\n}\n\nfunction loadSeriesTitles(contextid, ocinstanceid, series, seriestable, row) {\n    Ajax.call([{\n        methodname: 'block_opencast_get_series_titles',\n        args: {contextid: contextid, ocinstanceid: ocinstanceid, series: JSON.stringify(series)},\n        done: function (data) {\n            var titles = JSON.parse(data);\n            if (seriestable !== null) {\n                seriestable.getRows().forEach(function (row) {\n                    row.update({\"seriesname\": titles[row.getData().series]});\n                });\n            } else {\n                row.update({\"seriesname\": titles[row.getData().series]});\n            }\n\n        },\n        fail: function (error) {\n            // Show error.\n            if (seriestable !== null) {\n                seriestable.getRows().forEach(function (row) {\n                    row.update({\"seriesname\": error.message});\n                });\n            } else {\n                row.update({\"seriesname\": error.message});\n            }\n        }\n    }]);\n}\n\nexport const init = (contextid, ocinstanceid, seriesinputname) => {\n\n    // Load strings\n    var strings = [\n        {key: 'seriesname', component: 'block_opencast'},\n        {key: 'form_seriesid', component: 'block_opencast'},\n        {key: 'default', component: 'block_opencast'},\n        {key: 'noconnectedseries', component: 'block_opencast'},\n        {key: 'createseriesforcourse', component: 'block_opencast'},\n        {key: 'delete_series', component: 'block_opencast'},\n        {key: 'delete_confirm_series', component: 'block_opencast'},\n        {key: 'editseries', component: 'block_opencast'},\n        {key: 'delete', component: 'moodle'},\n        {key: 'loading', component: 'block_opencast'},\n        {key: 'importseries', component: 'block_opencast'},\n        {key: 'importfailed', component: 'block_opencast'}\n\n    ];\n    str.get_strings(strings).then(function (jsstrings) {\n        // Style hidden input.\n        var seriesinput = $('input[name=\"' + seriesinputname + '\"]');\n\n        var seriestable = new Tabulator(\"#seriestable\", {\n            data: JSON.parse(seriesinput.val()),\n            layout: \"fitColumns\",\n            placeholder: jsstrings[3],\n            headerSort: false,\n            dataChanged: function (data) {\n                // Remove empty rows.\n                data = data.filter(value => value.series);\n                data = data.reduce((function (arr, x) {\n                    arr[x.series] = x.isdefault;\n                    return arr;\n                }), {});\n                seriesinput.val(JSON.stringify(data));\n            },\n            dataLoaded: function (data) {\n                // Load series titles.\n                loadSeriesTitles(contextid, ocinstanceid, data.map(x => x['series']), this);\n            },\n            columns: [\n                {title: jsstrings[0], field: \"seriesname\", editable: false},\n                {title: jsstrings[1], field: \"series\", editable: false},\n                {\n                    title: jsstrings[2], field: \"isdefault\",\n                    hozAlign: \"center\",\n                    widthGrow: 0,\n                    formatter: function (cell) {\n                        var input = document.createElement('input');\n                        input.type = 'checkbox';\n                        input.checked = cell.getValue();\n                        input.addEventListener('click', function () {\n                            cell.getRow().update({'isdefault': $(this).prop('checked') ? 1 : 0});\n                        });\n                        return input;\n                    }\n                },\n                {\n                    title: \"\", width: 40, headerSort: false, hozAlign: \"center\", formatter:\n                        function () {\n                            return '<i class=\"icon fa fa-edit fa-fw\"></i>';\n                        },\n                    cellClick: function (_, cell) {\n                        var formdata = \"series=\" + cell.getRow().getCell(\"series\").getValue();\n                        ModalFactory.create({\n                            type: ModalFactory.types.SAVE_CANCEL,\n                            title: jsstrings[7],\n                            body: getBody(contextid, ocinstanceid, formdata)\n                        })\n                            .then(function (modal) {\n                                modal.setSaveButtonText(jsstrings[7]);\n                                modal.setLarge();\n\n                                // Reset modal on every open event.\n                                modal.getRoot().on(ModalEvents.hidden, function () {\n                                    modal.destroy();\n                                }).bind(this);\n\n                                // We want to hide the submit buttons every time it is opened.\n                                modal.getRoot().on(ModalEvents.shown, function () {\n                                    modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n                                }.bind(this));\n\n                                modal.getRoot().on(ModalEvents.save, function (e) {\n                                    e.preventDefault();\n                                    modal.getRoot().find('form').submit();\n                                });\n                                modal.getRoot().on('submit', 'form', {'modal': modal, 'contextid': contextid}, submitFormAjax);\n\n                                modal.show();\n                            });\n                    }\n                },\n                {\n                    title: \"\", width: 40, headerSort: false, hozAlign: \"center\", formatter:\n                        function () {\n                            return '<i class=\"icon fa fa-trash fa-fw\"></i>';\n                        },\n                    cellClick: function (e, cell) {\n                        ModalFactory.create({\n                            type: ModalFactory.types.SAVE_CANCEL,\n                            title: jsstrings[5],\n                            body: jsstrings[6]\n                        })\n                            .then(function (modal) {\n                                modal.setSaveButtonText(jsstrings[8]);\n                                modal.getRoot().on(ModalEvents.save, function () {\n                                    cell.getRow().delete();\n                                });\n                                modal.show();\n                            });\n                    }\n                }\n            ],\n        });\n\n        // Create new series in modal\n        // Button for connection a new series\n        $('#createseries').click(function () {\n            ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                title: jsstrings[4],\n                body: getBody(contextid, ocinstanceid)\n            })\n                .then(function (modal) {\n                    modal.setSaveButtonText(jsstrings[4]);\n                    modal.setLarge();\n\n                    // Reset modal on every open event.\n                    modal.getRoot().on(ModalEvents.hidden, function () {\n                        modal.setBody(getBody(contextid, ocinstanceid));\n                    }).bind(this);\n\n                    // We want to hide the submit buttons every time it is opened.\n                    modal.getRoot().on(ModalEvents.shown, function () {\n                        modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n                    }.bind(this));\n\n                    modal.getRoot().on(ModalEvents.save, function (e) {\n                        e.preventDefault();\n                        modal.getRoot().find('form').submit();\n                    });\n                    modal.getRoot().on('submit', 'form', {'modal': modal, 'contextid': contextid,\n                        'ocinstanceid': ocinstanceid,\n                        'seriestable': seriestable}, submitFormAjax);\n\n                    modal.show();\n                });\n\n        });\n\n        // Import new series in modal\n        $('#importseries').click(function () {\n            ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                title: jsstrings[10],\n                body: '<p><input type=\"text\" id=\"importseriesid\"></p>'\n            })\n                .then(function (modal) {\n                    modal.setSaveButtonText(jsstrings[10]);\n                    modal.setLarge();\n\n                    modal.getRoot().on(ModalEvents.save, function (e) {\n                        e.preventDefault();\n                        var seriesid = $('#importseriesid').val();\n\n                        // Submit form.\n                        Ajax.call([{\n                            methodname: 'block_opencast_import_series',\n                            args: {contextid: contextid, ocinstanceid: ocinstanceid, seriesid: seriesid},\n                            done: function (newseries) {\n                                modal.destroy();\n                                if(seriestable !== undefined) {\n                                    var s = JSON.parse(newseries);\n                                    seriestable.addRow({'seriesname': s.title, 'series':s.id, 'isdefault': s.isdefault});\n                                }\n                            },\n                            fail: function () {\n                                modal.destroy();\n                                var context = {\n                                    announce: true,\n                                    closebutton: true,\n                                    extraclasses: \"\",\n                                    message: jsstrings[11]\n                                };\n\n                                Templates.render(\"core/notification_error\", context).then(function (html){\n                                    $('#user-notifications').append(html);\n                                }).fail(function() {\n                                    Notification.alert(jsstrings[11], jsstrings[11]);\n                                });\n                            }\n                        }]);\n                    });\n\n                    modal.show();\n                });\n\n        });\n    });\n};\n\n"],"file":"block_manage_series.min.js"}